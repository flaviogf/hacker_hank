#!/usr/bin/env ruby

# frozen_string_literal: true

lib_path = File.join(File.expand_path(__dir__), '..', 'lib')

$LOAD_PATH.push(lib_path) unless $LOAD_PATH.include?(lib_path)

require 'json'
require 'sinatra'
require 'prometheus/middleware/collector'
require 'prometheus/middleware/exporter'

require 'drawing_book'

OpenTelemetry::SDK.configure do |c|
  c.service_name = 'drawing_book'
  c.use_all
end

set bind: '0.0.0.0'

use Rack::Deflater
use Prometheus::Middleware::Collector
use Prometheus::Middleware::Exporter

get '/' do
  number_of_pages = params['number_of_pages'].to_i
  page_number_to_turn_on = params['page_number_to_turn_on'].to_i

  OpenTelemetry::Trace.current_span.add_attributes(
    'number_of_pages' => number_of_pages.to_s,
    'page_number_to_turn_on' => page_number_to_turn_on.to_s
  )

  result = DrawingBook.page_count(number_of_pages, page_number_to_turn_on)

  JSON.dump(result)
end
